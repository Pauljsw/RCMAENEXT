CLASS_NAMES: ['dumptruck', 'excavator', 'grader', 'roller']

DATA_CONFIG:
    _BASE_CONFIG_: cfgs/dataset_configs/custom_dataset_isarc.yaml
    
    DATA_AUGMENTOR:
        DISABLE_AUG_LIST: ['placeholder']
        AUG_CONFIG_LIST:
            - NAME: gt_sampling
              USE_ROAD_PLANE: False
              DB_INFO_PATH:
                  - custom_dbinfos_train.pkl
              BACKUP_DB_INFO:
                  DB_INFO_PATH: custom_dbinfos_train.pkl
                  DB_DATA_PATH: gt_database/custom_database.npy
                  NUM_POINT_FEATURES: 3
              PREPARE: {
                 filter_by_min_points: ['dumptruck:15', 'excavator:15', 'grader:15', 'roller:15'],
              }
              SAMPLE_GROUPS: ['dumptruck:15', 'excavator:15', 'grader:15', 'roller:15']
              NUM_POINT_FEATURES: 3
              DATABASE_WITH_FAKELIDAR: False
              REMOVE_EXTRA_WIDTH: [0.0, 0.0, 0.0]
              LIMIT_WHOLE_SCENE: False
            - NAME: random_world_flip
              ALONG_AXIS_LIST: ['x']
            - NAME: random_world_rotation
              WORLD_ROT_ANGLE: [-0.78539816, 0.78539816]
            - NAME: random_world_scaling
              WORLD_SCALE_RANGE: [0.95, 1.05]

MODEL:
    NAME: VoxelNeXt
    
    VFE:
        NAME: MeanVFE

    BACKBONE_3D:
        NAME: VoxelResBackBone8xVoxelNeXt

    DENSE_HEAD:
        NAME: VoxelNeXtHead
        CLASS_AGNOSTIC: False
        INPUT_FEATURES: 128
        
        CLASS_NAMES_EACH_HEAD: [
            ['dumptruck', 'excavator', 'grader', 'roller'],
        ]
        
        SHARED_CONV_CHANNEL: 128
        KERNEL_SIZE_HEAD: 1
        
        USE_BIAS_BEFORE_NORM: True
        NUM_HM_CONV: 2
        SEPARATE_HEAD_CFG:
            HEAD_ORDER: ['center', 'center_z', 'dim', 'rot']
            HEAD_DICT: {
                'center': {'out_channels': 2, 'num_conv': 2},
                'center_z': {'out_channels': 1, 'num_conv': 2},
                'dim': {'out_channels': 3, 'num_conv': 2},
                'rot': {'out_channels': 2, 'num_conv': 2},
            }

        TARGET_ASSIGNER_CONFIG:
            FEATURE_MAP_STRIDE: 8
            NUM_MAX_OBJS: 500
            GAUSSIAN_OVERLAP: 0.1
            MIN_RADIUS: 2

        LOSS_CONFIG:
            LOSS_WEIGHTS: {
                'cls_weight': 1.0,
                'loc_weight': 1.0,
                'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
            }

        POST_PROCESSING:
            SCORE_THRESH: 0.1
            POST_CENTER_LIMIT_RANGE: [-70.4, -70.4, -6, 70.4, 70.4, 10]
            MAX_OBJ_PER_SAMPLE: 500
            NMS_CONFIG:
                NMS_TYPE: nms_gpu
                NMS_THRESH: 0.1
                NMS_PRE_MAXSIZE: 4096
                NMS_POST_MAXSIZE: 500

    POST_PROCESSING:
        RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
        EVAL_METRIC: kitti

OPTIMIZATION:
    BATCH_SIZE_PER_GPU: 8
    NUM_EPOCHS: 30              # ✅ 50 → 30 (pretrained model)

    OPTIMIZER: adam_onecycle
    LR: 0.001                   # ✅ 0.01 → 0.001 (pretrained model용 낮은 LR)
    DENSE_HEAD_LR_MULTIPLIER: 5.0
    WEIGHT_DECAY: 0.01
    MOMENTUM: 0.9

    MOMS: [0.95, 0.85]
    PCT_START: 0.4
    DIV_FACTOR: 10
    DECAY_STEP_LIST: [20, 25]   # ✅ 30 epoch에 맞게 조정
    LR_DECAY: 0.1
    LR_CLIP: 0.0000001

    LR_WARMUP: True             # ✅ False → True (pretrained model 안정화)
    WARMUP_EPOCH: 3          # ✅ 1 → 3 (충분한 warmup)

    GRAD_NORM_CLIP: 10